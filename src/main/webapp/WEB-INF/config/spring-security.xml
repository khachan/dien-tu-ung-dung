<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">
	
	<context:annotation-config />
	<security:global-method-security secured-annotations="enabled" />
	
	<!-- This is where we configure Spring-Security  -->
	<security:http auto-config="true" use-expressions="true" access-denied-page="/denied">
			<form-login 
			    login-page="/login" 
			    default-target-url="/group/default" 
				authentication-failure-url="/login?error" 
				username-parameter="username"
				password-parameter="password" />
			<logout logout-success-url="/login?logout" />
	
	</security:http>

<!-- Declare an authentication-manager to use a custom userDetailsService -->
	<security:authentication-manager>
	        <security:authentication-provider user-service-ref="staffUserDetailsServiceImpl">
	        		<security:password-encoder ref="passwordEncoder"/>
	        </security:authentication-provider>
	</security:authentication-manager>
	
	<!-- Use a Md5 encoder since the user's passwords are stored as Md5 in the database -->
<!-- 	<beans:bean class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" id="passwordEncoder"/>
 -->
	 <beans:bean id="passwordEncoder" 
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<beans:constructor-arg name="strength" value="11" />
  	</beans:bean>

	 <!-- An in-memory list of users. No need to access an external database layer.
		    See Spring Security 3.1 Reference 5.2.1 In-Memory Authentication -->
	 <!-- john's password is admin, while jane;s password is user  -->
<!-- 	 <security:user-service id="userDetailsService">
	    <security:user name="admin" password="$2a$06$jvru6k/jSfZFGR7g0HsS1uWWgp2PKM/lWrYTfJ5E3Wi.mrx6J8Wg2" authorities="ROLE_USER, ROLE_ADMIN" />
	    <security:user name="user" password="$2a$06$gLOYYc6Xhl26wLUILoF4v.fYhMgLTmfpyGIUnEeDEi/6jYti5cWCu" authorities="ROLE_USER" />
	  </security:user-service> -->
</beans:beans>